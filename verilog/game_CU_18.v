/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_CU_18 (
    input clk,
    input button2,
    input button3,
    input button4,
    input button1,
    input button5,
    input [15:0] regfile_datain,
    input [15:0] regfile_datain2,
    output reg [5:0] alufn,
    output reg [1:0] asel,
    output reg [3:0] bsel,
    output reg [3:0] wa,
    output reg [0:0] we,
    output reg [3:0] ra,
    output reg [3:0] rb
  );
  
  
  
  localparam RESTART_game_fsm = 7'd0;
  localparam RESTART_1_game_fsm = 7'd1;
  localparam RESTART_2_game_fsm = 7'd2;
  localparam RESTART_3_game_fsm = 7'd3;
  localparam E_START_game_fsm = 7'd4;
  localparam E_START_2_game_fsm = 7'd5;
  localparam START_game_fsm = 7'd6;
  localparam START_1_game_fsm = 7'd7;
  localparam START_2_game_fsm = 7'd8;
  localparam START_3_game_fsm = 7'd9;
  localparam START_4_game_fsm = 7'd10;
  localparam START_5_game_fsm = 7'd11;
  localparam IDLE_game_fsm = 7'd12;
  localparam S1_game_fsm = 7'd13;
  localparam S2_1_game_fsm = 7'd14;
  localparam S3_game_fsm = 7'd15;
  localparam S3_1_game_fsm = 7'd16;
  localparam S4_game_fsm = 7'd17;
  localparam S4_1_game_fsm = 7'd18;
  localparam S4_2_game_fsm = 7'd19;
  localparam S5_game_fsm = 7'd20;
  localparam S5_1_game_fsm = 7'd21;
  localparam S6_game_fsm = 7'd22;
  localparam S6_1_game_fsm = 7'd23;
  localparam S7_game_fsm = 7'd24;
  localparam S7_1_game_fsm = 7'd25;
  localparam S8_game_fsm = 7'd26;
  localparam S8_1_game_fsm = 7'd27;
  localparam S9_game_fsm = 7'd28;
  localparam S9_1_game_fsm = 7'd29;
  localparam S10_game_fsm = 7'd30;
  localparam S10_1_game_fsm = 7'd31;
  localparam S11_game_fsm = 7'd32;
  localparam S11_1_game_fsm = 7'd33;
  localparam S12_game_fsm = 7'd34;
  localparam S12_1_game_fsm = 7'd35;
  localparam S13_game_fsm = 7'd36;
  localparam S13_1_game_fsm = 7'd37;
  localparam S_MUL_game_fsm = 7'd38;
  localparam S_MUL_1_game_fsm = 7'd39;
  localparam S_MUL_P1_game_fsm = 7'd40;
  localparam S_MUL_P2_game_fsm = 7'd41;
  localparam S_ADD_10_game_fsm = 7'd42;
  localparam S_ADD_4_game_fsm = 7'd43;
  localparam S_ADD_2_game_fsm = 7'd44;
  localparam S_ADD_1_game_fsm = 7'd45;
  localparam S_ADD_P1_game_fsm = 7'd46;
  localparam S_ADD_P2_game_fsm = 7'd47;
  localparam S_SUB_game_fsm = 7'd48;
  localparam S_SUB_1_game_fsm = 7'd49;
  localparam S_SUB_P1_game_fsm = 7'd50;
  localparam S_SUB_P1_1_game_fsm = 7'd51;
  localparam S_SUB_P1_2_game_fsm = 7'd52;
  localparam S_SUB_P1_3_game_fsm = 7'd53;
  localparam S_SUB_P2_game_fsm = 7'd54;
  localparam S_SUB_P2_1_game_fsm = 7'd55;
  localparam S_SUB_P2_2_game_fsm = 7'd56;
  localparam S_SUB_P2_3_game_fsm = 7'd57;
  localparam S_P1_CHECK_game_fsm = 7'd58;
  localparam S_P1_CHECK_1_game_fsm = 7'd59;
  localparam S_SWITCH_P1_game_fsm = 7'd60;
  localparam S_P2_CHECK_game_fsm = 7'd61;
  localparam S_P2_CHECK_1_game_fsm = 7'd62;
  localparam S_SWITCH_P2_game_fsm = 7'd63;
  localparam WIN_P1_game_fsm = 7'd64;
  localparam WIN_P2_game_fsm = 7'd65;
  localparam E_START_1_game_fsm = 7'd66;
  localparam E_S1_game_fsm = 7'd67;
  localparam E_S2_1_game_fsm = 7'd68;
  localparam E_S2_game_fsm = 7'd69;
  localparam E_S3_game_fsm = 7'd70;
  localparam E_S3_1_game_fsm = 7'd71;
  localparam E_S4_game_fsm = 7'd72;
  localparam E_S4_1_game_fsm = 7'd73;
  localparam E_S4_2_game_fsm = 7'd74;
  localparam E_S5_game_fsm = 7'd75;
  localparam E_S5_1_game_fsm = 7'd76;
  localparam E_S6_game_fsm = 7'd77;
  localparam E_S6_1_game_fsm = 7'd78;
  localparam E_S7_game_fsm = 7'd79;
  localparam E_S7_1_game_fsm = 7'd80;
  localparam E_S_TURNCHECK_game_fsm = 7'd81;
  localparam E_S_SWITCH_P1_game_fsm = 7'd82;
  localparam E_S_SWITCH_P2_game_fsm = 7'd83;
  localparam E_WIN_game_fsm = 7'd84;
  
  reg [6:0] M_game_fsm_d, M_game_fsm_q = RESTART_game_fsm;
  
  always @* begin
    M_game_fsm_d = M_game_fsm_q;
    
    alufn = 1'h0;
    asel = 2'h0;
    bsel = 4'h0;
    wa = 4'hf;
    we = 1'h0;
    ra = 4'h0;
    rb = 4'h0;
    M_game_fsm_d = RESTART_game_fsm;
    if (button1) begin
      M_game_fsm_d = RESTART_game_fsm;
    end else begin
      
      case (M_game_fsm_q)
        RESTART_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = RESTART_2_game_fsm;
        end
        RESTART_2_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = RESTART_3_game_fsm;
        end
        RESTART_3_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h8;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = START_game_fsm;
        end
        START_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h1;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          rb = 4'h5;
          
          case ({button5, button2})
            2'h2: begin
              M_game_fsm_d = START_1_game_fsm;
            end
            2'h1: begin
              M_game_fsm_d = E_START_1_game_fsm;
            end
            default: begin
              M_game_fsm_d = START_game_fsm;
            end
          endcase
        end
        START_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = START_2_game_fsm;
        end
        START_2_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = START_3_game_fsm;
        end
        START_3_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = START_4_game_fsm;
        end
        START_4_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = START_5_game_fsm;
        end
        START_5_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h8;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S1_game_fsm;
        end
        S1_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h0;
          if (button2) begin
            bsel = 4'h1;
            M_game_fsm_d = S3_game_fsm;
          end else begin
            if (button3) begin
              bsel = 4'h2;
              M_game_fsm_d = S3_game_fsm;
            end else begin
              if (button4) begin
                bsel = 4'h3;
                M_game_fsm_d = S3_game_fsm;
              end else begin
                bsel = 4'h0;
                M_game_fsm_d = S1_game_fsm;
              end
            end
          end
        end
        S3_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = S3_1_game_fsm;
        end
        S3_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S4_game_fsm;
          end else begin
            M_game_fsm_d = S5_game_fsm;
          end
        end
        S4_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h2;
          rb = 4'h1;
          M_game_fsm_d = S4_1_game_fsm;
        end
        S4_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h1;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          rb = 4'h5;
          M_game_fsm_d = S4_2_game_fsm;
        end
        S4_2_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = S5_game_fsm;
        end
        S5_game_fsm: begin
          alufn = 6'h23;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          ra = 4'h0;
          rb = 4'h2;
          M_game_fsm_d = S6_game_fsm;
        end
        S6_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = S7_game_fsm;
        end
        S7_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'ha;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S7_1_game_fsm;
        end
        S7_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_MUL_game_fsm;
          end else begin
            M_game_fsm_d = S8_game_fsm;
          end
        end
        S8_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S8_1_game_fsm;
        end
        S8_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_10_game_fsm;
          end else begin
            M_game_fsm_d = S9_game_fsm;
          end
        end
        S9_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h3;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S9_1_game_fsm;
        end
        S9_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_4_game_fsm;
          end else begin
            M_game_fsm_d = S10_game_fsm;
          end
        end
        S10_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S10_1_game_fsm;
        end
        S10_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_2_game_fsm;
          end else begin
            M_game_fsm_d = S11_game_fsm;
          end
        end
        S11_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h8;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S11_1_game_fsm;
        end
        S11_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_2_game_fsm;
          end else begin
            M_game_fsm_d = S12_game_fsm;
          end
        end
        S12_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h7;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          M_game_fsm_d = S12_1_game_fsm;
        end
        S12_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SUB_game_fsm;
          end else begin
            M_game_fsm_d = S13_game_fsm;
          end
        end
        S13_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S13_1_game_fsm;
        end
        S13_1_game_fsm: begin
          if (regfile_datain2[0+0-:1]) begin
            M_game_fsm_d = S_SWITCH_P2_game_fsm;
          end else begin
            M_game_fsm_d = S_SWITCH_P1_game_fsm;
          end
        end
        S_MUL_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_MUL_1_game_fsm;
        end
        S_MUL_1_game_fsm: begin
          if (regfile_datain2[0+0-:1]) begin
            M_game_fsm_d = S_MUL_P2_game_fsm;
          end else begin
            M_game_fsm_d = S_MUL_P1_game_fsm;
          end
        end
        S_MUL_P1_game_fsm: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_MUL_P2_game_fsm: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_ADD_10_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h4;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_4_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h3;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_2_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_1_game_fsm: begin
          if (regfile_datain2[0+0-:1]) begin
            M_game_fsm_d = S_ADD_P2_game_fsm;
          end else begin
            M_game_fsm_d = S_ADD_P1_game_fsm;
          end
        end
        S_ADD_P1_game_fsm: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_ADD_P2_game_fsm: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_SUB_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h7;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_SUB_1_game_fsm;
        end
        S_SUB_1_game_fsm: begin
          if (regfile_datain2[0+0-:1]) begin
            M_game_fsm_d = S_SUB_P2_1_game_fsm;
          end else begin
            M_game_fsm_d = S_SUB_P1_1_game_fsm;
          end
        end
        S_SUB_P1_1_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'h7;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h5;
          M_game_fsm_d = S_SUB_P1_2_game_fsm;
        end
        S_SUB_P1_2_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SUB_P1_3_game_fsm;
          end else begin
            M_game_fsm_d = S_SUB_P1_game_fsm;
          end
        end
        S_SUB_P1_3_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_SUB_P1_game_fsm: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_SUB_P2_1_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'h7;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h6;
          M_game_fsm_d = S_SUB_P2_2_game_fsm;
        end
        S_SUB_P2_2_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SUB_P2_3_game_fsm;
          end else begin
            M_game_fsm_d = S_SUB_P2_game_fsm;
          end
        end
        S_SUB_P2_3_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_SUB_P2_game_fsm: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_P1_CHECK_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'hd;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h5;
          M_game_fsm_d = S_P1_CHECK_1_game_fsm;
        end
        S_P1_CHECK_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SWITCH_P1_game_fsm;
          end else begin
            M_game_fsm_d = WIN_P1_game_fsm;
          end
        end
        S_SWITCH_P1_game_fsm: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S1_game_fsm;
        end
        S_P2_CHECK_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'hd;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h6;
          M_game_fsm_d = S_P2_CHECK_1_game_fsm;
        end
        S_P2_CHECK_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SWITCH_P2_game_fsm;
          end else begin
            M_game_fsm_d = WIN_P2_game_fsm;
          end
        end
        S_SWITCH_P2_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S1_game_fsm;
        end
        WIN_P1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h3;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          rb = 4'h0;
          if (button5) begin
            M_game_fsm_d = RESTART_game_fsm;
          end else begin
            M_game_fsm_d = WIN_P1_game_fsm;
          end
        end
        WIN_P2_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h3;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          rb = 4'h0;
          if (button5) begin
            M_game_fsm_d = RESTART_game_fsm;
          end else begin
            M_game_fsm_d = WIN_P2_game_fsm;
          end
        end
        E_START_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = E_START_2_game_fsm;
        end
        E_START_2_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h8;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = E_S1_game_fsm;
        end
        E_S1_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h0;
          if (button2) begin
            bsel = 4'h1;
            M_game_fsm_d = E_S2_game_fsm;
          end else begin
            if (button3) begin
              bsel = 4'h2;
              M_game_fsm_d = E_S2_game_fsm;
            end else begin
              if (button4) begin
                bsel = 4'h3;
                M_game_fsm_d = E_S2_game_fsm;
              end else begin
                bsel = 4'h0;
                M_game_fsm_d = E_S1_game_fsm;
              end
            end
          end
        end
        E_S2_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = E_S2_1_game_fsm;
        end
        E_S2_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = E_WIN_game_fsm;
          end else begin
            M_game_fsm_d = E_S3_game_fsm;
          end
        end
        E_S3_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = E_S3_1_game_fsm;
        end
        E_S3_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = E_S4_game_fsm;
          end else begin
            M_game_fsm_d = E_S5_game_fsm;
          end
        end
        E_S4_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h2;
          rb = 4'h1;
          M_game_fsm_d = E_S4_1_game_fsm;
        end
        E_S4_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h1;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          rb = 4'h5;
          M_game_fsm_d = E_S4_2_game_fsm;
        end
        E_S4_2_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = E_S5_game_fsm;
        end
        E_S5_game_fsm: begin
          alufn = 6'h23;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          ra = 4'h0;
          rb = 4'h2;
          M_game_fsm_d = E_S6_game_fsm;
        end
        E_S6_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = E_S_TURNCHECK_game_fsm;
        end
        E_S_TURNCHECK_game_fsm: begin
          if (regfile_datain2[0+0-:1]) begin
            M_game_fsm_d = E_S_SWITCH_P2_game_fsm;
          end else begin
            M_game_fsm_d = E_S_SWITCH_P1_game_fsm;
          end
        end
        E_S_SWITCH_P1_game_fsm: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = E_S1_game_fsm;
        end
        E_S_SWITCH_P2_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = E_S1_game_fsm;
        end
        E_WIN_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'hf;
          wa = 4'h0;
          we = 1'h1;
          ra = 4'h0;
          if (button5) begin
            M_game_fsm_d = RESTART_game_fsm;
          end else begin
            M_game_fsm_d = E_WIN_game_fsm;
          end
        end
      endcase
    end
  end
  
  always @(posedge clk) begin
    M_game_fsm_q <= M_game_fsm_d;
  end
  
endmodule
